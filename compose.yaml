services:
  demo:
    image: "opsdemo:${IMAGE_TAG}"
    environment:
      - GREETING=${GREETING}
      - UP_DELAY_MS=${UP_DELAY_MS}
    networks:
      - traefik-public
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 0s
        monitor: 10s
        order: start-first
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.swarm.network=traefik-public"
        - "traefik.swarm.lbswarm=true"
        - "traefik.http.routers.opsdemo.rule=Host(`opsdemo.local`)"
        - "traefik.http.routers.opsdemo.entrypoints=web"
        - "traefik.http.services.opsdemo.loadbalancer.server.port=8080"
        - "traefik.http.services.opsdemo.loadbalancer.healthcheck.path=/actuator/health"
        - "traefik.http.services.opsdemo.loadbalancer.healthcheck.interval=10s"
        - "traefik.http.services.opsdemo.loadbalancer.healthcheck.timeout=3s"
        - "traefik.http.services.opsdemo.loadbalancer.healthcheck.scheme=http"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q UP"]
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  traefik-public:
    external: true
